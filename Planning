Test Admin Account:
UN: waltonca@etsu.edu
PW: YMXH@9J!72kM6Em

Standards
Definition of Done: Code that works, meets the requirements, has some error handling, and is documented
Code Review: On completion of a task, peer review by another dev team member
Coding Standards: 
  Commenting: Classes, methods, variables; up for debate
  "Clean Code": Indentation, curly braces below
  Naming Convention: Names that seem self-explanatory
Unit Testing: At the end of a feature's completion, test both happy and unhappy paths
Requirements Testing: PO's job, traceability matrix
Documentation: Commenting, Readme, UML Diagram
GitHub Standard: Push atleast once per task. Pull frequently.
Tools: DB Browser for SQLite
  IDE: VS

Sprint 1:
Objective: Get everyone onto the same page, get the development environment set up, and begin work. 
*** SUBJECT TO CHANGE ***
Tasks: 
  Get the Github set up ✓
  Get everyone connected to the Github ✓
  Get test accounts and give out the logins for at least one admin account and at least one player account ✓
  A.3.c Cannot change status or creation date (Can modify start time before it has started, status changes automatically)
    * Edit the start time ✓
    * Cannot edit creation date ✓
  
Sprint 2:
Objective: Restrict the current solution to better fit the timeline. Get an email set up to easily let players know that they are added to the hunt. 
Experiment with getting email to SMS working. Research on QR codes.
Acceptance Criteria: 
  One hunt. A set amount of tasks. (Getting there)
  Once an account is created, you only need access code to login. ✓
  A secure email can send an email to the user containing the URL to the hunt. If SMS cannot be set up, it will also contain the access code. ✓
  If SMS can be set up, verify that the SMS sends the access code successfully to multiple carriers. (SMS could not be set up)
  Get an idea on whether or not QR codes are doable. If they are doable, show how it works and how it integrates into the solution. ✓ (Unable to implement currently)
  Admins can send players email/SMS automatically upon creating an account. ✓
  Players can create their own account to join the hunt. X (Changed: Get batch account creation to work ✓)
  
Tasks: 
  Research for email to SMS solution ✓
  Figure out how to store the password for the email ✓
  Figure out how to handle different carriers (Somewhat)
  Research for QR code solution ✓
  Automatically add people to one hunt ✓
  Batch account creation ✓
  Get the solution to only one hunt (Could use some work, but overall happy)
  Hide the Profile Button ✓
  Adding carrier per user ✓
  Coming up with a script ✓
  Add their name to the email ✓
  Add their access code to the email ✓
  Test it to make sure the email sends to the right person ✓
  Test that the access code sent actually works and is the correct code ✓
  Get the CSV set up ✓
  Check that the batch creation works ✓
  
 Sprint 3:
 Objective: Get the solution down to a single hunt to make it simple for users to start playing. Polish the account access (profile button, notification on batch account creation).
 Attempt to get SMS working to make sure players get their access codes. Work on documentation to make the next team's lives easier. 
 Acceptance Criteria: 
  One hunt from all angles, including admin. An admin WILL mess up the "one hunt" goal.
  "Hello [Name]!" button no longer takes you to your profile.
  The one hunt looks more presentable.
  There is a notification once the batch account creation is done.
  Cannot create accounts that are already created. 
  SMS is in a semi-working state.
  Documentation has begun. Not just the comments, but rather an in-depth description into how the solution works and the technologies behind it.
Tasks:
  Remove "Hello player" as a link
  Remove Add hunt functionality to simplify the game down to a single hunt 
  Create email to text functionality ✓
  Prevent multiple inputs on batch creation ✓
  Prevent duplicated users ✓
  Popup message on batch completiong saying failure/success ✓
  Add details to the created batch popup on how many accounts were created ✓
  Functionality to send specific users access codes 

Sprint 4:
Objective: Get the project into a state that makes the next team have an easier time getting into it. This includes documentation in the code as well as outside of the code. 
I want there to be a good overview of how the project works and the libraries it uses. 
Also: get the projects merged!
Acceptance Criteria: 
  Major files and functions documented.
  Major files documented in external document.
  Letters created for product owner and Scrum master.
  GitHub is in a cohesive state.
Tasks: 
  Change the name of the hunt
  Fix the description text for the hunt
  
  
Secondary Objective Options
  Test submission status for when a player completes a task
      Correct entry ✓
      Incorrect entry ✓
      No internet
      Server/database update on correct entry ✓
      Actually shows the update to the user ✓
      Verify that the user cannot complete the same task multiple times ✓
  Not being able to delete a hunt once it has started (Remove functionality) 
  Test that the current solution changes status automatically ✓
  A.3.a Can only edit pending or active hunts
    * Verify that you cannot edit completed hunts
    * Remove ability to edit completed hunt
  A.2.c Custom Invitations
  A.2.f Hunt URLs
  A.4.d Access Code and Invitation sending ✓
  Figure out how to get the current solution onto the VM 
  Deploy the solution to the VM 
  Show everyone how to connect to it 
